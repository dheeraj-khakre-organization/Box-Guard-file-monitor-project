package com.metron.boxguard.controller;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.metron.boxguard.service.BoxService;
import com.metron.boxguard.service.MalwareBazaarService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/webhook")
public class WebhookController {

    private final BoxService boxService;
    private final MalwareBazaarService mbService;

    public WebhookController(BoxService boxService, MalwareBazaarService mbService) {
        this.boxService = boxService;
        this.mbService = mbService;
    }

    @PostMapping
    public ResponseEntity<String> handleWebhook(@RequestBody String body) {
        try {
            JsonNode json = new ObjectMapper().readTree(body);
            String trigger = json.path("trigger").asText();

            if ("FILE.UPLOADED".equals(trigger)) {
                String fileId = json.path("source").path("id").asText();
                System.out.println("ðŸ“¥ File uploaded with ID: " + fileId);
                boxService.processUploadedFile(fileId, mbService);
            }
            return ResponseEntity.ok("Webhook received and processed.");
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(500).body("Failed to process webhook");
        }
    }
}
